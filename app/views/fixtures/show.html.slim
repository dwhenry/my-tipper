- content_for :header do
  | Results

#nav
  = link_to "Previous match", fixture_path(@fixture.previous, paramify), class: 'prev' if @fixture.previous
  - if @fixture.previous && @fixture.next
    '  |
  = link_to "Next match", fixture_path(@fixture.next, paramify), class: 'next' if @fixture.next

- if @fixture.at > Time.now.utc
  h3 Unable to display match result for future dated matches
- else
  .row
    .col-12.col-lg-4.order-lg-2
      .row
        .col-2.col-lg-4.bg-white.align-right.py-4.match-entry Average Pick
        .col-4.col-lg-8= current_selection(@fixture, @fixture.picks.where(user: @users).average(:pick), force: true)
        .col-2.col-lg-4.bg-white.align-right.py-4.match-entry Result
        .col-4.col-lg-8= current_selection(@fixture, @fixture.result, force: true) if @fixture.result
        .col-2.col-lg-4.bg-white.align-right.py-4.match-entry Average Score
        .col-4.col-lg-8= @fixture.picks.where(user: @users).average(:score).try(:round, 1)

    .col-lg-8.order-lg-1
      .row.bg-white.align-items-center.mr-0.py-4.match-entry
        .col-4 Competitor
        .col-2 Pick
        .col-2 Round Score
        .col-2 Total Score
        .col-2 Position
      - @users.sort_by(&:name).each do |user|
        - pick = Pick.includes(:fixture).find_by(user_id: user.id, fixture_id: @fixture.id)
        - next unless pick
        .row.mr-0.py-4.match-entry
          .col-4= user.name
          .col-2 class=correct_team(@fixture, pick.pick)
            = current_selection(@fixture, pick.pick, force: @fixture.at < Time.now.utc)
          .col-2.text-center= pick.score
          .col-2.text-center= @points[pick.user_id]
          .col-2.text-center
            = @points[pick.user_id] ? @points.values.index(@points[pick.user_id]) + 1 : nil
            '
            - change = @points.values.index(@points[pick.user_id]) - @prev_points.values.index(@prev_points[pick.user_id]) if @points[pick.user_id] && @prev_points[pick.user_id]
            - if change && change != 0
              span class=(change > 0 ? 'down' : 'up')
                |  (
                = change.abs
                ' )

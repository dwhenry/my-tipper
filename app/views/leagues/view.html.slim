- content_for :header do
  | League results for:
  br
  = @league.name

.site-section.bg-light data-aos="fade-up"
  .container
    .row.align-items-first
      .col-lg-7
        h2 class="text-uppercase text-black font-weight-bold mb-3"= "#{@league.name} (RWC #{event})"
        - @league.players.sort_by { |p| [@points.values.index(@points[p.user_id]) || 1_000_000, p.user.name] }.each do |player|
          - user = player.user
          - next unless player.request_state == 'accepted'
          / - next unless @points[user.id] || @points.empty?
          .row.bg-white.align-items-center.ml-0.mr-0.py-4.match-entry.player
            .col-md-6.col-lg-6.mb-6.mb-lg-0
              .d-block.d-lg-flex
                .text
                  h3 class="h5 mb-0 text-black"= link_to user.name, results_path(paramify(user: user.id))
                  span class="text-uppercase small country" Competitor

            .col-6.col-md-3.col-lg-3.mb-3.mb-lg-0
              .d-block.d-lg-flex
                .text
                  h3 class="h5 mb-0 text-black"= @points[user.id] || 'Pending'
                  span class="text-uppercase small country" Points

            .col-6.col-md-3.col-lg-3.mb-3.mb-lg-0
              .d-block.d-lg-flex
                .text
                  h3 class="h5 mb-0 text-black"
                    - index = @points.values.index(@points[user.id])
                    = index ? index + 1 : 'Pending'
                  span class="text-uppercase small country" Position

            - if @league.confirmation_required?
              .col-0.col-md-3
              .col-4.col-md-3
                .d-block
                  - if @current_player.access == 'primary' && @current_player != player
                    - if player.access == 'player'
                      = button_to 'Make Admin', action_league_path(a: 'make_admin', player_id: player.id), confirm: 'Are you sure you want to make this player an admin?', class: "btn btn-secondary btn-sm btn-block"
                    - else
                      = button_to 'Remove Admin', action_league_path(a: 'make_admin', player_id: player.id), confirm: 'Are you sure you want to remove admin rights for this player?', class: "btn btn-danger btn-sm btn-block"
              - if @current_player.access != 'player'
                .col-4.col-md-3
                  .d-block
                    = button_to 'Remove', action_league_path(a: 'remove', player_id: player.id), confirm: 'Are you sure you want to remove this player from the league?', class: "btn btn-danger btn-sm btn-block"
                .col-4.col-md-3
                  .d-block
                    = button_to 'Bane', action_league_path(a: 'bane', player_id: player.id), confirm: 'You will not be able to unbane this player. Confirm?', class: "btn btn-danger btn-sm btn-block"

        - if %w[admin primary].include?(@current_player.access)
          br
          h2 class="text-uppercase text-black font-weight-bold mb-3" Player pending acceptance
          - @league.players.sort_by { |p| p.user.name }.each do |player|
            - user = player.user
            - next unless player.request_state == 'requested'
            .row.bg-white.align-items-center.ml-0.mr-0.py-4.match-entry.player--requested
              .col-md-6.col-lg-6.mb-6.mb-lg-0
                .d-block.d-lg-flex
                  .text
                    h3 class="h5 mb-0 text-black"= link_to user.name, results_path(paramify(user: user.id))
                    span class="text-uppercase small country" Competitor

              .col-4.col-md-2.col-lg-2.mb-3.mb-lg-0
                .d-block
                  = button_to "Approve", action_league_path(a: 'approve', player_id: player.id), class: "btn btn-success btn-sm btn-block"

              .col-4.col-md-2.col-lg-2.mb-3.mb-lg-0
                .d-block
                  = button_to "Reject", action_league_path(a: 'remove', player_id: player.id), confirm: 'Are you sure you want to reject this player. Confirm?', class: "btn btn-danger btn-sm btn-block"

              .col-4.col-md-2.col-lg-2.mb-3.mb-lg-0
                .d-block
                  = button_to 'Bane', action_league_path(a: 'bane', player_id: player.id), confirm: 'You will not be able to unbane this player. Confirm?', class: "btn btn-secondary btn-sm btn-block"
      .col-lg-5
        .p-4.border.mb-3.bg-white
          .row
            .col-md-12
              H3= @league.name

          .row
            .col-md-6 Members
            .col-md-6= @league.users.count

          .row
            .col-md-6 Access
            .col-md-6= @league.public? ? 'Public' : 'Private'

          - if @league.password.present?
            .row
              .col-md-6 Password
              .col-md-6= @league.password

          .row
            .col-md-12
              h4 Other leagues
            - current_user.leagues.order(Arel.sql("case when event then concat('RWC ', name) else name end")).each do |l|
              - next if l == league
              .col-md-12
                = link_to l.name, view_league_path(l)
